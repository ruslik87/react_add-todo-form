{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","visibleTodos","map","getUserById","userId","usersFromServer","find","App","useState","setTitle","setUserId","titleError","setTitleError","userError","setUserError","maxId","Math","max","action","method","onSubmit","e","preventDefault","push","type","placeholder","value","onChange","target","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36ebddbc.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport './UserInfo.scss';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport './TodoInfo.scss';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return user && (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  visibleTodos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ visibleTodos }) => {\n  return (\n    <section className=\"TodoList\">\n      {visibleTodos.map(todo => {\n        return (\n          <TodoInfo key={todo.id} todo={todo} />\n        );\n      })}\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nconst getUserById = (userId: number): User | null => {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n};\n\nexport const visibleTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n  const maxId = Math.max(...visibleTodos.map(todo => todo.id));\n\n  const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value.replace(/^\\s*|[^a-zа-я0-9\\s]/ig, ''));\n    setTitleError(false);\n  };\n\n  const handleUserChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+e.target.value);\n    setUserError(false);\n  };\n\n  const addTodo = () => {\n    visibleTodos.push({\n      id: maxId + 1,\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    });\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (userId && title) {\n      addTodo();\n      setUserId(0);\n      setTitle('');\n\n      return;\n    }\n\n    setTitleError(!title);\n    setUserError(!userId);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitleChange}\n            />\n          </label>\n\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleUserChange}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(({ id, name }) => (\n                <option\n                  key={id}\n                  value={id}\n                >\n                  {name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList visibleTodos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}